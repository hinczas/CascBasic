@model CascBasic.Models.RegisterViewModel

@{
    ViewBag.Title = "Register";
    Layout = null;
}
<link href="~/Content/bootstrap.min.css" rel="stylesheet" />
<link href="~/Content/login.css" rel="stylesheet" />
<script src="~/Scripts/jquery-2.1.4.min.js"></script>
<script src="~/Scripts/bootstrap.min.js"></script>
<script src="~/Scripts/login.js"></script>

<div class="wrapper">

    @if (TempData["alert"] != null)
    {
        <div class="alert alert-dismissible @TempData["alertClass"]" role="alert">
            <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
            <strong>@TempData["alertHead"]</strong>
            @TempData["alertMessage"]
        </div>
    }

  <div id="formContent">
    <div class="drag-handle"></div>
    <span><br /><legend><small>Register new user</small></legend> </span>
    @using (Html.BeginForm(new { ReturnUrl = ViewBag.ReturnUrl })) {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true, "",new { @class = "text-danger" })
        @Html.ValidationMessageFor(m => m.UserName)
        @Html.ValidationMessageFor(m => m.Password)
        @Html.ValidationMessageFor(m => m.ConfirmPassword)
                
        @Html.TextBoxFor(m => m.Email, new { @placeholder = "email", required="required" })

        @Html.PasswordFor(m => m.Password, new { @placeholder = "password", required="required" })

        @Html.PasswordFor(m => m.ConfirmPassword, new { @placeholder = "confirm password", required="required" })
        <input type="submit" value="Register">
    }

    <!-- Register -->
    <div id="formFooter">
      @Html.ActionLink("Login", "Login") with existing account.
    </div>

  </div>
</div>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}